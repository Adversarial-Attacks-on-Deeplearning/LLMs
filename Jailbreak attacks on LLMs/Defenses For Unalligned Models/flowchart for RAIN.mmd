```mermaid
graph TD
    A[Start: Input Query<br>(Root Node X)] --> B{Outer Loop: Generate Token Sequence}
    B --> C[Inner Loop: Forward Step<br>Select Token Set Y using<br>Eq. 1: Y = argmax(v + c·u)]
    C --> D[Self-Evaluation<br>Score s: +1 (harmless), -1 (harmful)]
    D --> E[Update Attributes<br>v (value), n (visit count), e (embedding)<br>Eq. 2 for path nodes]
    E --> F{Similarity Update<br>Update sibling nodes if<br>sim(e, e') > threshold}
    F --> G{Dynamic Node Addition<br>Add new child nodes if<br>child quality low or similar}
    G --> H[Backward Step<br>Rewind to Root Node<br>Retain Updated Attributes]
    H --> I{Inner Loop End<br>More Iterations?}
    I -->|Yes| C
    I -->|No| J[Outer Loop: Adjust Probabilities<br>Select Most-Visited Token Set]
    J --> K{Output Conditions<br>Score ≥ Threshold or<br>Max Iterations Reached?}
    K -->|No| B
    K -->|Yes| L[Output Final Harmless<br>Token Sequence Y]
    L --> M[End]
```
